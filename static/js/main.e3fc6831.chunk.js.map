{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","action","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpensesData","className","htmlFor","type","id","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selectedYear","onFilterChange","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","arrValues","dataPoints","map","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","expense","getMonth","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","length","Expenses","filteredYear","setFilteredYear","filter","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3fc6831.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './ExpenseForm.css';\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState('');\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n\n  const [enteredAmount, setEnteredAmount] = useState('');\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const [enteredDate, setEnteredDate] = useState('');\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    }\n\n    props.onSaveExpensesData(expenseData);\n\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n  }\n\n  return (\n    <form action=\"\" onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label htmlFor=\"title\">Title</label>\n          <input type=\"text\" id=\"title\" value={enteredTitle} onChange={titleChangeHandler} />\n        </div>\n        <div className=\"new-expense__control\">\n          <label htmlFor=\"amount\">Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            id=\"amount\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label htmlFor=\"date\">Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            id=\"date\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n        <button type=\"submit\">Add expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import { useState } from 'react';\nimport ExpenseForm from './ExpenseForm';\nimport './NewExpense.css';\n\nconst NewExpense = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const startEditing = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditing = () => {\n    setIsEditing(false);\n  };\n\n  const saveExpensesData = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n\n  // Toggle the form to add expense and start editing\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && <button onClick={startEditing}>Add New expense</button>}\n      {isEditing && (\n        <ExpenseForm\n          onSaveExpensesData={saveExpensesData}\n          onCancel={stopEditing}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import './Card.css';\n\nconst Card = (props) => {\n  const classes = 'card ' + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n  const handleSelectChange = (event) => {\n    props.onFilterChange(event.target.value);\n  }\n\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selectedYear} onChange={handleSelectChange}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;","import './ChartBar.css';\n\nconst ChartBar = (props) => {\n  let barFillHeight = '0%';\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import ChartBar from './ChartBar';\n\nimport './Chart.css';\n\nconst Chart = (props) => {\n  const arrValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...arrValues);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          label={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import Chart from '../Chart/Chart';\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: 'Jan', value: 0 },\n    { label: 'Feb', value: 0 },\n    { label: 'Mar', value: 0 },\n    { label: 'Apr', value: 0 },\n    { label: 'May', value: 0 },\n    { label: 'Jun', value: 0 },\n    { label: 'Jul', value: 0 },\n    { label: 'Aug', value: 0 },\n    { label: 'Sep', value: 0 },\n    { label: 'Oct', value: 0 },\n    { label: 'Nov', value: 0 },\n    { label: 'Dec', value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__day\">{day}</div>\n      <div className=\"expense-date__year\">{year}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import Card from '../UI/Card';\nimport ExpenseDate from './ExpenseDate';\nimport './ExpenseItem.css';\n\nconst ExpenseItem = (props) => {\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\n\nconst ExpensesList = (props) => {\n  if (props.items.length <= 0) {\n    return <h2 className=\"expenses-list__fallback\">No expenses found!</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n}\n\nexport default ExpensesList;","import { useState } from 'react';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport ExpensesChart from './ExpensesChart';\nimport ExpensesList from './ExpensesList';\nimport './Expenses.css';\n\nconst Expenses = (props) => {\n  let expenses = props.items;\n\n  const [filteredYear, setFilteredYear] = useState('2020');\n\n  const handleFilterChange = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  }\n\n  expenses = expenses.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear\n  });\n\n  return (\n    <Card className=\"expenses\">\n      <ExpensesFilter selectedYear={filteredYear} onFilterChange={handleFilterChange} />\n      <ExpensesChart expenses={expenses} />\n      <ExpensesList items={expenses} />\n    </Card>\n  );\n};\n\nexport default Expenses;\n","import { useState } from 'react';\n\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\n\n// create dummy data as a separate array outside component\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: 'e2',\n    title: 'New TV',\n    amount: 799.49,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  // Pass dummy data to useState hook to manage and alter data\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  // Upon adding new expense, update the expenses array created \n  // above using hook. Note, use a function that gets the prev snapshot of data \n  // inside state updating function rather than passing data \n  // directly inside the function like setExpenses([expense, ...prevExpenses]).\n  // This ensures you always have updated data when updating state\n  const handleAddExpense = (expense) => {\n    setExpenses((prevExpenses) => [expense, ...prevExpenses]);\n  }\n\n  return (\n    <div>\n      <h2>Let's get started!</h2>\n      <NewExpense onAddExpense={handleAddExpense} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}