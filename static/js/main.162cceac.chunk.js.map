{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","useState","setEnteredTitle","setEnteredAmount","setEnteredDate","action","className","htmlFor","type","id","onChange","event","target","value","min","step","max","NewExpense","Card","props","classes","children","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","setTitle","amount","onClick","console","log","Expenses","expenses","items","App","Date","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.162cceac.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './ExpenseForm.css';\n\nconst ExpenseForm = () => {\n  const [enteredTitle, setEnteredTitle] = useState('');\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n\n  const [enteredAmount, setEnteredAmount] = useState('');\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const [enteredDate, setEnteredDate] = useState('');\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  return (\n    <form action=\"\">\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label htmlFor=\"title\">Title</label>\n          <input type=\"text\" id=\"title\" onChange={titleChangeHandler} />\n        </div>\n        <div className=\"new-expense__control\">\n          <label htmlFor=\"amount\">Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            id=\"amount\"\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label htmlFor=\"date\">Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            id=\"date\"\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"submit\">Add expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import ExpenseForm from './ExpenseForm';\nimport './NewExpense.css';\n\nconst NewExpense = () => {\n  return (\n    <div className=\"new-expense\">\n      <ExpenseForm />\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import './Card.css';\n\nconst Card = (props) => {\n  const classes = 'card ' + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__day\">{day}</div>\n      <div className=\"expense-date__year\">{year}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import { useState } from 'react';\nimport Card from '../UI/Card';\nimport ExpenseDate from './ExpenseDate';\nimport './ExpenseItem.css';\n\nconst ExpenseItem = (props) => {\n  const [title, setTitle] = useState(props.title);\n\n  const clickHandler = () => {\n    setTitle('Updated');\n    console.log(title);\n  };\n\n  // Title changes, but when we console it after change,\n  // it shows the old title. This is because React useState\n  // schedules the change. This does not stop current function execution.\n\n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date} />\n      <div className=\"expense-item__description\">\n        <h2>{title}</h2>\n        <div className=\"expense-item__price\">${props.amount}</div>\n      </div>\n      <button onClick={clickHandler}>Click Title</button>\n    </Card>\n  );\n};\n\nexport default ExpenseItem;\n","import Card from '../UI/Card';\nimport ExpenseItem from './ExpenseItem';\nimport './Expenses.css';\n\nconst Expenses = (props) => {\n  const expenses = props.items;\n\n  return (\n    <Card className=\"expenses\">\n      <ExpenseItem\n        title={expenses[0].title}\n        amount={expenses[0].amount}\n        date={expenses[0].date}\n      />\n      <ExpenseItem\n        title={expenses[1].title}\n        amount={expenses[1].amount}\n        date={expenses[1].date}\n      />\n      <ExpenseItem\n        title={expenses[2].title}\n        amount={expenses[2].amount}\n        date={expenses[2].date}\n      />\n      <ExpenseItem\n        title={expenses[3].title}\n        amount={expenses[3].amount}\n        date={expenses[3].date}\n      />\n    </Card>\n  );\n};\n\nexport default Expenses;\n","import NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\n\nconst App = () => {\n  const expenses = [\n    {\n      id: 'e1',\n      title: 'Toilet Paper',\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    {\n      id: 'e2',\n      title: 'New TV',\n      amount: 799.49,\n      date: new Date(2021, 2, 12),\n    },\n    {\n      id: 'e3',\n      title: 'Car Insurance',\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: 'e4',\n      title: 'New Desk (Wooden)',\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    },\n  ];\n\n  return (\n    <div>\n      <h2>Let's get started!</h2>\n      <NewExpense />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}